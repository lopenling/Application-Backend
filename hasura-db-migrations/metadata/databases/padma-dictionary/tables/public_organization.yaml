table:
  name: organization
  schema: public
object_relationships:
  - name: admin
    using:
      foreign_key_constraint_on: admin_id
array_relationships:
  - name: dictionaries
    using:
      foreign_key_constraint_on:
        column: organization_id
        table:
          name: dictionary
          schema: data
  - name: organization_members
    using:
      foreign_key_constraint_on:
        column: organization_id
        table:
          name: organization_member
          schema: public
  - name: teams
    using:
      foreign_key_constraint_on:
        column: organization_id
        table:
          name: team
          schema: public
insert_permissions:
  - role: user
    permission:
      check: {}
      set:
        admin_id: x-hasura-User-Id
      columns:
        - logo
        - name
        - same_as_team
select_permissions:
  - role: user
    permission:
      columns:
        - same_as_team
        - logo
        - name
        - admin_id
        - id
      filter:
        _or:
          - admin_id:
              _eq: X-Hasura-User-Id
          - organization_members:
              user_id:
                _eq: X-Hasura-User-Id
          - teams:
              team_members:
                user_id:
                  _eq: X-Hasura-User-Id
      allow_aggregations: true
update_permissions:
  - role: user
    permission:
      columns:
        - logo
        - name
        - same_as_team
      filter:
        admin_id:
          _eq: X-Hasura-User-Id
      check: null
      set:
        admin_id: x-hasura-User-Id
delete_permissions:
  - role: user
    permission:
      backend_only: false
      filter:
        admin_id:
          _eq: X-Hasura-User-Id
