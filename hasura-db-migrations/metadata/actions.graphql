type Query {
  addDictionaryAPI(
    dictionary: DictionaryObj!
  ): AddDictionaryAPIOutput
}

type Query {
  add_dictionary_file(
    file: file!
  ): AddDictionaryAPIOutput
}

enum MyMutationDataAccessModeEnum {
  """ Custom Dictionary """ Custom
  """ Public Dictionary """ Public
}

enum MyMutationDataDictionaryConstraint {
  """ unique or primary key constraint on columns "name" """ dictionary_name_key
  """ unique or primary key constraint on columns "id" """ dictionary_pkey
}

enum MyMutationDataDictionaryUpdateColumn {
  """ column name """ access_mode
  """ column name """ name
}

enum MyMutationDataLanguageEnum {
  English
  Tibetan
}

enum MyMutationDataWordAssoicationTypeEnum {
  """ Associated words are antonymous """ Antonym
  """ Associated words are synonymous """ Synonym
}

enum MyMutationOrganizationMemberConstraint {
  """ unique or primary key constraint on columns "user_id", "organization_id" """ organization_member_pkey
}

enum MyMutationOrganizationMemberUpdateColumn {
  """ column name """ user_id
}

enum MyMutationTeamConstraint {
  """ unique or primary key constraint on columns "name" """ team_name_key
  """ unique or primary key constraint on columns "id" """ team_pkey
}

enum MyMutationTeamUpdateColumn {
  """ column name """ admin_id
  """ column name """ logo
  """ column name """ name
}

enum MyMutationDictionaryPermissionConstraint {
  """ unique or primary key constraint on columns "id" """ dictionary_permissions_pkey
  """ unique or primary key constraint on columns "dictionary_id", "team_id" """ dictionary_permissions_team_id_dictionary_id_key
}

enum MyMutationDictionaryPermissionUpdateColumn {
  """ column name """ dictionary_id
  """ column name """ team_id
}

enum MyMutationTeamMemberConstraint {
  """ unique or primary key constraint on columns "user_id", "team_id" """ team_member_pkey
}

enum MyMutationTeamMemberUpdateColumn {
  """ column name """ user_id
}

enum MyMutationOrganizationConstraint {
  """ unique or primary key constraint on columns "admin_id" """ organization_admin_id_key
  """ unique or primary key constraint on columns "name" """ organization_name_key
  """ unique or primary key constraint on columns "id" """ organization_pkey
}

enum MyMutationOrganizationUpdateColumn {
  """ column name """ logo
  """ column name """ name
  """ column name """ same_as_team
}

enum MyMutationUserConstraint {
  """ unique or primary key constraint on columns "auth_id" """ user_auth_id_key
  """ unique or primary key constraint on columns "email" """ user_email_key
  """ unique or primary key constraint on columns "id" """ user_pkey
}

enum MyMutationUserUpdateColumn {
  """ column name """ auth_id
  """ column name """ email
  """ column name """ name
}

enum MyMutationDataThesaurusConstraint {
  """ unique or primary key constraint on columns "id" """ thesaurus_pkey
  """ unique or primary key constraint on columns "relationship", "source_word_id", "target_word_id" """ thesaurus_source_word_id_target_word_id_relationship_key
}

enum MyMutationDataThesaurusUpdateColumn {
  """ column name """ relationship
  """ column name """ source_word_id
  """ column name """ target_word_id
}

enum MyMutationDataWordsConstraint {
  """ unique or primary key constraint on columns "id" """ words_pkey
  """ unique or primary key constraint on columns "word" """ words_word_key
}

enum MyMutationDataWordsUpdateColumn {
  """ column name """ language
  """ column name """ word
}

enum MyMutationDataDescriptionsConstraint {
  """ unique or primary key constraint on columns "description", "word_id", "dictionary_id" """ descriptions_description_word_id_dictionary_id_key
  """ unique or primary key constraint on columns "id" """ descriptions_pkey
}

enum MyMutationDataDescriptionsUpdateColumn {
  """ column name """ description
  """ column name """ dictionary_id
  """ column name """ language
  """ column name """ last_updated_by
  """ column name """ updated_at
  """ column name """ word_id
}

input DictionaryObj {
  name: String!
  target: String!
  source: String!
  access_mode: String!
  organization_id: uuid!
}

input MyMutationDataDictionaryInsertInput {
  access_mode: MyMutationDataAccessModeEnum
  descriptions: MyMutationDataDescriptionsArrRelInsertInput
  dictionary_permissions: MyMutationDictionaryPermissionArrRelInsertInput
  name: String
  organization: MyMutationOrganizationObjRelInsertInput
  organization_id: uuid
  source: MyMutationDataLanguageEnum
  target: MyMutationDataLanguageEnum
}

input MyMutationDataDescriptionsArrRelInsertInput {
  data: [MyMutationDataDescriptionsInsertInput!]!
  on_conflict: MyMutationDataDescriptionsOnConflict
}

input MyMutationDataDescriptionsInsertInput {
  description: String
  dictionary: MyMutationDataDictionaryObjRelInsertInput
  dictionary_id: uuid
  language: MyMutationDataLanguageEnum
  last_updated_by: uuid
  updated_at: timestamptz
  updated_by: MyMutationUserObjRelInsertInput
  word: MyMutationDataWordsObjRelInsertInput
  word_id: Int
}

input MyMutationDataDictionaryObjRelInsertInput {
  data: MyMutationDataDictionaryInsertInput!
  on_conflict: MyMutationDataDictionaryOnConflict
}

input MyMutationDataDictionaryOnConflict {
  constraint: MyMutationDataDictionaryConstraint!
  update_columns: [MyMutationDataDictionaryUpdateColumn!]!
  where: MyMutationDataDictionaryBoolExp
}

input MyMutationDataDictionaryBoolExp {
  _and: [MyMutationDataDictionaryBoolExp!]
  _not: MyMutationDataDictionaryBoolExp
  _or: [MyMutationDataDictionaryBoolExp!]
  access_mode: MyMutationDataAccessModeEnumComparisonExp
  descriptions: MyMutationDataDescriptionsBoolExp
  dictionary_permissions: MyMutationDictionaryPermissionBoolExp
  id: MyMutationUuidComparisonExp
  name: MyMutationStringComparisonExp
  organization: MyMutationOrganizationBoolExp
  organization_id: MyMutationUuidComparisonExp
  source: MyMutationDataLanguageEnumComparisonExp
  target: MyMutationDataLanguageEnumComparisonExp
}

input MyMutationDataAccessModeEnumComparisonExp {
  _eq: MyMutationDataAccessModeEnum
  _in: [MyMutationDataAccessModeEnum!]
  _is_null: Boolean
  _neq: MyMutationDataAccessModeEnum
  _nin: [MyMutationDataAccessModeEnum!]
}

input MyMutationDataDescriptionsBoolExp {
  _and: [MyMutationDataDescriptionsBoolExp!]
  _not: MyMutationDataDescriptionsBoolExp
  _or: [MyMutationDataDescriptionsBoolExp!]
  description: MyMutationStringComparisonExp
  dictionary: MyMutationDataDictionaryBoolExp
  dictionary_id: MyMutationUuidComparisonExp
  id: MyMutationIntComparisonExp
  language: MyMutationDataLanguageEnumComparisonExp
  last_updated_by: MyMutationUuidComparisonExp
  updated_at: MyMutationTimestamptzComparisonExp
  updated_by: MyMutationUserBoolExp
  word: MyMutationDataWordsBoolExp
  word_id: MyMutationIntComparisonExp
}

input MyMutationStringComparisonExp {
  _eq: String
  _gt: String
  _gte: String
  _ilike: String
  _in: [String!]
  _iregex: String
  _is_null: Boolean
  _like: String
  _lt: String
  _lte: String
  _neq: String
  _nilike: String
  _nin: [String!]
  _niregex: String
  _nlike: String
  _nregex: String
  _nsimilar: String
  _regex: String
  _similar: String
}

input MyMutationUuidComparisonExp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

input MyMutationIntComparisonExp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

input MyMutationDataLanguageEnumComparisonExp {
  _eq: MyMutationDataLanguageEnum
  _in: [MyMutationDataLanguageEnum!]
  _is_null: Boolean
  _neq: MyMutationDataLanguageEnum
  _nin: [MyMutationDataLanguageEnum!]
}

input MyMutationTimestamptzComparisonExp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

input MyMutationUserBoolExp {
  _and: [MyMutationUserBoolExp!]
  _not: MyMutationUserBoolExp
  _or: [MyMutationUserBoolExp!]
  auth_id: MyMutationStringComparisonExp
  descriptions: MyMutationDataDescriptionsBoolExp
  email: MyMutationStringComparisonExp
  id: MyMutationUuidComparisonExp
  name: MyMutationStringComparisonExp
  organization: MyMutationOrganizationBoolExp
  organization_members: MyMutationOrganizationMemberBoolExp
  team_members: MyMutationTeamMemberBoolExp
  teams: MyMutationTeamBoolExp
}

input MyMutationOrganizationBoolExp {
  _and: [MyMutationOrganizationBoolExp!]
  _not: MyMutationOrganizationBoolExp
  _or: [MyMutationOrganizationBoolExp!]
  admin: MyMutationUserBoolExp
  admin_id: MyMutationUuidComparisonExp
  dictionaries: MyMutationDataDictionaryBoolExp
  id: MyMutationUuidComparisonExp
  logo: MyMutationStringComparisonExp
  name: MyMutationStringComparisonExp
  organization_members: MyMutationOrganizationMemberBoolExp
  same_as_team: MyMutationBooleanComparisonExp
  teams: MyMutationTeamBoolExp
}

input MyMutationOrganizationMemberBoolExp {
  _and: [MyMutationOrganizationMemberBoolExp!]
  _not: MyMutationOrganizationMemberBoolExp
  _or: [MyMutationOrganizationMemberBoolExp!]
  organization: MyMutationOrganizationBoolExp
  organization_id: MyMutationUuidComparisonExp
  user: MyMutationUserBoolExp
  user_id: MyMutationUuidComparisonExp
}

input MyMutationBooleanComparisonExp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

input MyMutationTeamBoolExp {
  _and: [MyMutationTeamBoolExp!]
  _not: MyMutationTeamBoolExp
  _or: [MyMutationTeamBoolExp!]
  admin: MyMutationUserBoolExp
  admin_id: MyMutationUuidComparisonExp
  dictionary_permission: MyMutationDictionaryPermissionBoolExp
  id: MyMutationUuidComparisonExp
  logo: MyMutationStringComparisonExp
  name: MyMutationStringComparisonExp
  organization: MyMutationOrganizationBoolExp
  organization_id: MyMutationUuidComparisonExp
  team_members: MyMutationTeamMemberBoolExp
}

input MyMutationDictionaryPermissionBoolExp {
  _and: [MyMutationDictionaryPermissionBoolExp!]
  _not: MyMutationDictionaryPermissionBoolExp
  _or: [MyMutationDictionaryPermissionBoolExp!]
  dictionary: MyMutationDataDictionaryBoolExp
  dictionary_id: MyMutationUuidComparisonExp
  id: MyMutationUuidComparisonExp
  team: MyMutationTeamBoolExp
  team_id: MyMutationUuidComparisonExp
}

input MyMutationTeamMemberBoolExp {
  _and: [MyMutationTeamMemberBoolExp!]
  _not: MyMutationTeamMemberBoolExp
  _or: [MyMutationTeamMemberBoolExp!]
  team: MyMutationTeamBoolExp
  team_id: MyMutationUuidComparisonExp
  user: MyMutationUserBoolExp
  user_id: MyMutationUuidComparisonExp
}

input MyMutationDataWordsBoolExp {
  _and: [MyMutationDataWordsBoolExp!]
  _not: MyMutationDataWordsBoolExp
  _or: [MyMutationDataWordsBoolExp!]
  descriptions: MyMutationDataDescriptionsBoolExp
  id: MyMutationIntComparisonExp
  language: MyMutationDataLanguageEnumComparisonExp
  thesaurus: MyMutationDataThesaurusBoolExp
  word: MyMutationStringComparisonExp
}

input MyMutationDataThesaurusBoolExp {
  _and: [MyMutationDataThesaurusBoolExp!]
  _not: MyMutationDataThesaurusBoolExp
  _or: [MyMutationDataThesaurusBoolExp!]
  id: MyMutationIntComparisonExp
  relationship: MyMutationDataWordAssoicationTypeEnumComparisonExp
  source_word: MyMutationDataWordsBoolExp
  source_word_id: MyMutationIntComparisonExp
  target_word: MyMutationDataWordsBoolExp
  target_word_id: MyMutationIntComparisonExp
}

input MyMutationDataWordAssoicationTypeEnumComparisonExp {
  _eq: MyMutationDataWordAssoicationTypeEnum
  _in: [MyMutationDataWordAssoicationTypeEnum!]
  _is_null: Boolean
  _neq: MyMutationDataWordAssoicationTypeEnum
  _nin: [MyMutationDataWordAssoicationTypeEnum!]
}

input MyMutationUserObjRelInsertInput {
  data: MyMutationUserInsertInput!
  on_conflict: MyMutationUserOnConflict
}

input MyMutationUserInsertInput {
  auth_id: String
  descriptions: MyMutationDataDescriptionsArrRelInsertInput
  email: String
  name: String
  organization: MyMutationOrganizationObjRelInsertInput
  organization_members: MyMutationOrganizationMemberArrRelInsertInput
  team_members: MyMutationTeamMemberArrRelInsertInput
  teams: MyMutationTeamArrRelInsertInput
}

input MyMutationOrganizationObjRelInsertInput {
  data: MyMutationOrganizationInsertInput!
  on_conflict: MyMutationOrganizationOnConflict
}

input MyMutationOrganizationInsertInput {
  admin: MyMutationUserObjRelInsertInput
  dictionaries: MyMutationDataDictionaryArrRelInsertInput
  logo: String
  name: String
  organization_members: MyMutationOrganizationMemberArrRelInsertInput
  same_as_team: Boolean
  teams: MyMutationTeamArrRelInsertInput
}

input MyMutationDataDictionaryArrRelInsertInput {
  data: [MyMutationDataDictionaryInsertInput!]!
  on_conflict: MyMutationDataDictionaryOnConflict
}

input MyMutationOrganizationMemberArrRelInsertInput {
  data: [MyMutationOrganizationMemberInsertInput!]!
  on_conflict: MyMutationOrganizationMemberOnConflict
}

input MyMutationOrganizationMemberInsertInput {
  organization: MyMutationOrganizationObjRelInsertInput
  organization_id: uuid
  user: MyMutationUserObjRelInsertInput
  user_id: uuid
}

input MyMutationOrganizationMemberOnConflict {
  constraint: MyMutationOrganizationMemberConstraint!
  update_columns: [MyMutationOrganizationMemberUpdateColumn!]!
  where: MyMutationOrganizationMemberBoolExp
}

input MyMutationTeamArrRelInsertInput {
  data: [MyMutationTeamInsertInput!]!
  on_conflict: MyMutationTeamOnConflict
}

input MyMutationTeamInsertInput {
  admin: MyMutationUserObjRelInsertInput
  admin_id: uuid
  dictionary_permission: MyMutationDictionaryPermissionArrRelInsertInput
  logo: String
  name: String
  organization: MyMutationOrganizationObjRelInsertInput
  organization_id: uuid
  team_members: MyMutationTeamMemberArrRelInsertInput
}

input MyMutationDictionaryPermissionArrRelInsertInput {
  data: [MyMutationDictionaryPermissionInsertInput!]!
  on_conflict: MyMutationDictionaryPermissionOnConflict
}

input MyMutationDictionaryPermissionInsertInput {
  dictionary: MyMutationDataDictionaryObjRelInsertInput
  dictionary_id: uuid
  team: MyMutationTeamObjRelInsertInput
  team_id: uuid
}

input MyMutationTeamObjRelInsertInput {
  data: MyMutationTeamInsertInput!
  on_conflict: MyMutationTeamOnConflict
}

input MyMutationTeamOnConflict {
  constraint: MyMutationTeamConstraint!
  update_columns: [MyMutationTeamUpdateColumn!]!
  where: MyMutationTeamBoolExp
}

input MyMutationDictionaryPermissionOnConflict {
  constraint: MyMutationDictionaryPermissionConstraint!
  update_columns: [MyMutationDictionaryPermissionUpdateColumn!]!
  where: MyMutationDictionaryPermissionBoolExp
}

input MyMutationTeamMemberArrRelInsertInput {
  data: [MyMutationTeamMemberInsertInput!]!
  on_conflict: MyMutationTeamMemberOnConflict
}

input MyMutationTeamMemberInsertInput {
  team: MyMutationTeamObjRelInsertInput
  team_id: uuid
  user: MyMutationUserObjRelInsertInput
  user_id: uuid
}

input MyMutationTeamMemberOnConflict {
  constraint: MyMutationTeamMemberConstraint!
  update_columns: [MyMutationTeamMemberUpdateColumn!]!
  where: MyMutationTeamMemberBoolExp
}

input MyMutationOrganizationOnConflict {
  constraint: MyMutationOrganizationConstraint!
  update_columns: [MyMutationOrganizationUpdateColumn!]!
  where: MyMutationOrganizationBoolExp
}

input MyMutationUserOnConflict {
  constraint: MyMutationUserConstraint!
  update_columns: [MyMutationUserUpdateColumn!]!
  where: MyMutationUserBoolExp
}

input MyMutationDataWordsObjRelInsertInput {
  data: MyMutationDataWordsInsertInput!
  on_conflict: MyMutationDataWordsOnConflict
}

input MyMutationDataWordsInsertInput {
  descriptions: MyMutationDataDescriptionsArrRelInsertInput
  language: MyMutationDataLanguageEnum
  thesaurus: MyMutationDataThesaurusArrRelInsertInput
  word: String
}

input MyMutationDataThesaurusArrRelInsertInput {
  data: [MyMutationDataThesaurusInsertInput!]!
  on_conflict: MyMutationDataThesaurusOnConflict
}

input MyMutationDataThesaurusInsertInput {
  relationship: MyMutationDataWordAssoicationTypeEnum
  source_word: MyMutationDataWordsObjRelInsertInput
  source_word_id: Int
  target_word: MyMutationDataWordsObjRelInsertInput
  target_word_id: Int
}

input MyMutationDataThesaurusOnConflict {
  constraint: MyMutationDataThesaurusConstraint!
  update_columns: [MyMutationDataThesaurusUpdateColumn!]!
  where: MyMutationDataThesaurusBoolExp
}

input MyMutationDataWordsOnConflict {
  constraint: MyMutationDataWordsConstraint!
  update_columns: [MyMutationDataWordsUpdateColumn!]!
  where: MyMutationDataWordsBoolExp
}

input MyMutationDataDescriptionsOnConflict {
  constraint: MyMutationDataDescriptionsConstraint!
  update_columns: [MyMutationDataDescriptionsUpdateColumn!]!
  where: MyMutationDataDescriptionsBoolExp
}

input file {
  name: String!
  source: String!
  target: String!
  access_mode: String!
  organization_id: String!
  file_type: String!
  base64str: String!
}

input file_input {
  name: String!
  source: String!
  target: String!
  access_mode: String!
  organization_id: String!
  file_type: String!
  base64str: String!
}

type results {
  result: json!
}

type dictionary {
  result: json!
}

type SampleOutput {
  accessToken: String!
}

type AddDictionaryAPIOutput {
  result: json!
}

type AddDOutput {
  id: Int!
}

type MyMutationOutput {
  id: uuid!
}

